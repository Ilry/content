local horizontal_offset=GetModConfigData("horizontal_offset") local vertical_offset=GetModConfigData("vertical_offset") local GetCreatureScanDataDefinition=require("wx78_moduledefs").GetCreatureScanDataDefinition local module_definitions=require("wx78_moduledefs").module_definitions local _G=GLOBAL local STRINGS=_G.STRINGS STRINGS.WX78MODULE_HELPER_ICONSTYLE=GetModConfigData("icon_style") local CreaterList={}for i=1,math.huge do local name,value=GLOBAL.debug.getupvalue(GetCreatureScanDataDefinition,i) if name==nil then break elseif name=="scandata_definitions" then for k,_ in pairs(value) do table.insert(CreaterList,k) end end end local ModuleList={}for _,v in pairs(module_definitions) do ModuleList[v.name]={}end for _,v in pairs(CreaterList) do table.insert(ModuleList[GetCreatureScanDataDefinition(v).module],v) end local function GetModuleStr() local idx=1 local lines={}for k,v in pairs(ModuleList) do lines[idx]=(STRINGS.NAMES[string.upper("wx78module_" .. k)] or "Missing Name") .. " : " for a,b in pairs(v) do lines[idx]=lines[idx] .. (STRINGS.NAMES[string.upper(b)] or "Missing Name") .. "; " end idx=idx +1 end return lines end local margin_size_x=60 local margin_size_y=315 local dir_vert=0 local dir_horiz=1 local anchor_vert=-1 local anchor_horiz=-1 local margin_dir_vert=-1 local margin_dir_horiz=-1 local require=GLOBAL.require local function PositionMsgMenu(controls,screensize) local hudscale=controls.top_root:GetScale() local screenw_full,screenh_full=GLOBAL.unpack(screensize) local screenw=screenw_full/hudscale.x local screenh=screenh_full/hudscale.y local pos_x=(anchor_horiz*controls.msgmenu.menusize.w/2)+(dir_horiz*screenw/2)+(margin_dir_horiz*margin_size_x)-80+horizontal_offset local pos_y=(anchor_vert*controls.msgmenu.menusize.h/2)+(dir_vert*screenh/2)+(margin_dir_vert*margin_size_y)+vertical_offset controls.msgmenu:SetPosition(pos_x,pos_y,0) end local msgmenu=nil local function AddMsgMenu(controls) local lines=GetModuleStr() controls.inst:DoTaskInTime( 0,function() local WX78ModuleWidget=require "widgets/wx78modulewidget" controls.msgmenu=controls.top_root:AddChild( WX78ModuleWidget(lines) ) local screensize={GLOBAL.TheSim:GetScreenSize()}PositionMsgMenu(controls,screensize) local OnUpdate_base=controls.OnUpdate controls.OnUpdate=function(self,dt) OnUpdate_base(self,dt) local curscreensize={GLOBAL.TheSim:GetScreenSize()}if curscreensize[1]~=screensize[1] or curscreensize[2]~=screensize[2] then PositionMsgMenu(controls,curscreensize) screensize=curscreensize end end end) end AddClassPostConstruct("widgets/controls",AddMsgMenu)