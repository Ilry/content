local Widget=require "widgets/widget" local TEMPLATES=require "widgets/redux/templates" local PagedList=require "widgets/pagedlist" SM_MSG_TXT={} function string.split1(str,delimiter) str=tostring(str) delimiter=tostring(delimiter) if (delimiter=='') then return false end local pos,arr=0,{} for st,sp in function() return string.find(str,delimiter,pos,true) end do table.insert(arr,string.sub(str,pos,st - 1)) pos=sp + 1 end table.insert(arr,string.sub(str,pos)) return arr[1] end local WX78ModuleWidget=Class(Widget,function(self,lines) if lines then local idx=1 for _,msg in pairs(lines) do if string.len(msg)~=0 then SM_MSG_TXT[idx]=msg idx=idx + 1 end end end Widget._ctor(self,"WX78ModuleWidget") self.owner=ThePlayer self.bg=self:AddChild(TEMPLATES.RectangleWindow(300,450)) local menu_w,menu_h=self.bg:GetSize() self.menusize={w=menu_w,h=menu_h} self.bg:SetTint(1,1,1,0.4) self.bg:SetClickable(false) self.togglebutton=self:AddChild(TEMPLATES.StandardButton( function() self:ToggleOpen() end,"...",{50,50})) self.msg_btns={} local idx=1 local pos_y=self.menusize.h/2 - 35 for i,msg in pairs(SM_MSG_TXT) do if i<=10 then self.msg_btns[idx]=self:AddChild(TEMPLATES.LabelButton( function() ThePlayer.components.talker:Say(SM_MSG_TXT[i]) end,tostring(idx),msg,20,290,50,10)) self.msg_btns[idx]:SetPosition(-10,pos_y,0) idx=idx + 1 pos_y=pos_y - 42 else break end end local newbuttonpos=Point(self.menusize.w/2 + 20,self.menusize.h/2 + 50,0) self.togglebutton.o_pos=newbuttonpos self.togglebutton:SetPosition(newbuttonpos:Get()) self.togglebutton:SetText(STRINGS.WX78MODULE_HELPER_ICONSTYLE) self.togglebutton:Show() if ThePlayer and ThePlayer.prefab~="wx78" then self.togglebutton:Hide() end local pagewidth=350 self.pagelist=self:AddChild(PagedList(pagewidth,function(msg_btn,msg_txt) msg_btn.button:SetText(string.split1(msg_txt,":")) if msg_txt~=nil then msg_btn.button.onclick=function() ThePlayer.components.talker:Say(msg_txt) end else msg_btn.button.onclick=function() end end end,self.msg_btns)) self.pagelist:SetItemsData(SM_MSG_TXT) local arrowOffset=pagewidth/2 - 8 self.pagelist.left_button:SetPosition(-arrowOffset,-202,0) self.pagelist.left_button:SetScale(.30) self.pagelist.right_button:SetPosition(arrowOffset,-202,0) self.pagelist.right_button:SetScale(.30) self:SetOpen( false ) self:Show() end) function WX78ModuleWidget:ToggleOpen() self:SetOpen( not self:IsOpen() ) end function WX78ModuleWidget:SetOpen( state ) if state==nil then state=true end if state then self.open=true self.pagelist:Show() for _,msg_btn in pairs(self.msg_btns) do msg_btn:Show() end self.bg:Show() else self.open=false self.pagelist:Hide() for _,msg_btn in pairs(self.msg_btns) do msg_btn:Hide() end self.bg:Hide() end end function WX78ModuleWidget:IsOpen() return self.open end return WX78ModuleWidget 